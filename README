sfMooToolsFormExtraPlugin
=========================

@author:    Jo Carter <jocarter@holler.co.uk>
@version:   1.0


Introduction
------------

This plugin contains several widgets (and a validator) for use with the MooTools javascript framework (http://mootools.net/).

Be sure to ./symfony plugin:publish-assets after installation to ensure all the Javascript and Stylesheet files are in place


Pre-requisites
--------------

 * MooTools Core 1.3+


MooEditable Textarea
--------------------

  All configuration options:
  
     * config: Additional MooEditable configuration
     * width: The width of the editable area, defaults to 500px
     * height: The height of the editable area, defaults to 200px
     * extratoolbar: Any additional toolbar options - include | to separate, by default this contains 'urlimage'
                     for image insertion


  Enhanced string validator:
    
    * Adds %current_length% to the options for the validator messages
    * Strips HTML tags before calculating length, but returns the string with HTML
    * Can be used in conjunction with other validators


  Example usage:

    Default implementation, with enhanced validator:
    
      $this->widgetSchema['summary'] = new sfWidgetFormTextareaMooEditable();
      $this->validatorSchema['summary'] = new sfEnhancedValidatorString(array('max_length'=>200), 
                                                                        array('max_length'=>'Content is too long (%current_length% characters), please limit to %max_length% characters'));


Datepicker - input box with calendar control on input click
-----------------------------------------------------------

  All configuration options:
  
    * locale: defaults to en-GB - if this is changed, will require additional locale JS files
    * with_time: include time in the date picker (date format defaults to Y-m-d H:i instead of Y-m-d)
    * min_date: default is none, set to restrict date range (format: same as the date_format)
    * max_date: default is none, set to restrict date range (format: same as the date_format)


  Example usage:
  
    Just date:
    
      $this->widgetSchema['date'] = new sfWidgetFormInputDateTimeMooPicker();
      
    Date with min and max:
    
      $minDate = '2006-01-01';
      $maxDate = (date('Y') + 1) . '-12-31';
      $this->widgetSchema['date'] = new sfWidgetFormInputDateTimeMooPicker(array('min_date'=>$minDate, 'max_date'=>$maxDate));
      
    With time:
  
      $this->widgetSchema['date'] = new sfWidgetFormInputDateTimeMooPicker(array('with_time'=>'true'));

  
Datepicker - dropdowns with calendar control on image click
-----------------------------------------------------------

  All configuration options:
  
    (date):
    
      * locale: defaults to en-GB - if this is changed, will require additional locale JS files
      * min_date: default is none, set to restrict date range (format: Y-m-d)
      * max_date: default is none, set to restrict date range (format: Y-m-d)
      * date_widget: The date widget to render with the calendar
  
    (datetime):
    
      * locale: defaults to en-GB - if this is changed, will require additional locale JS files
      * min_date: default is none, set to restrict date range (format: Y-m-d)
      * max_date: default is none, set to restrict date range (format: Y-m-d)
      * date_time_widget: The datetime widget to render with the calendar
    
    
  Example usage:
  
    Just date:
  
      $this->widgetSchema['date'] = new sfWidgetFormDateMooPicker();
      
    Date with min and max and customised date widget:
  
      $years = range(2006, (date('Y') + 1));
      $minDate = '2006-01-01';
      $maxDate = (date('Y') + 1) . '-12-31';
      $this->widgetSchema['date'] = new sfWidgetFormDateMooPicker(array('min_date'=>$minDate, 'max_date'=>$maxDate, 
                                                                        'date_widget'=>new sfWidgetFormDate(array('years'=>array_combine($years, $years), 
                                                                                                                  'format'=>'%day% %month% %year%'))));
      
    With time:
    
      $this->widgetSchema['date'] = new sfWidgetFormDateTimeMooPicker();
      
    Customised datetime widget:
    
      $years = range(2006, (date('Y') + 1));
      $minDate = '2006-01-01';
      $maxDate = (date('Y') + 1) . '-12-31';
      $this->widgetSchema['date'] = new sfWidgetFormDateTimeMooPicker(array('min_date'=>$minDate, 'max_date'=>$maxDate, 
                                                                            'date_time_widget'=>new sfWidgetFormDateTime(array('date' => array('years'=>array_combine($years, $years), 
                                                                                                                                               'format'=>'%day% %month% %year%'),
                                                                                                                               'time'=> array('format'=>'%hour% %minute%')))));
